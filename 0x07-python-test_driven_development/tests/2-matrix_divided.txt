Test for matrix_divided.
========================
uasge matrix_divided(matrix, div)
=================================print

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix_divided('hello', 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([1,2,3], 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[3, '9'], [15, 3]], 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[3]], 3)
[[1.0]]

>>> matrix_divided([[1,2], [3,4]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix_divided([[1,2], [3,4], [5,6,7]], 6)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([['1', 2], [3,4]], 4)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix_divided([[1, float('nan')], [3,4]], 6)
Traceback (most recent call last):
OverflowError: cannot convert float NaN to integer

>>> matrix_divided([[1, float('inf')], [3,4]], 6)
OverflowError: cannot convert float infinity to integer
