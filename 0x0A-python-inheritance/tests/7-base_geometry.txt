Test for 7-base_geometry.py
===========================

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> bg = BaseGeometry()

>>> bg.area()
Traceback (most recent call last):
Exception: area() is not implemented

>>> bg.integer_validator("name", 12)

>>> bg.integer_validator("name", "john")
Traceback (most recent call last):
TypeError: name must be an integer

>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
ValueError: age must be greater than 0

>>> bg.integer_validator("int")
Traceback (most recent call last):
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg.integer_validator()
Traceback (most recent call last):
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> bg.integer_validator("name", True)
Traceback (most recent call last):
TypeError: name must be an integer

>>> bg.integer_validator("invalid_tuple", (1,))
Traceback (most recent call last):
TypeError: invalid_tuple must be an integer

>>> bg.integer_validator("invalid_list", [3])
Traceback (most recent call last):
TypeError: invalid_list must be an integer

>>> bg.integer_validator("invalid_set", {1, 3})
Traceback (most recent call last):
TypeError: invalid_set must be an integer

>>> bg.integer_validator("NoneType", None)
Traceback (most recent call last):
TypeError: NoneType must be an integer
